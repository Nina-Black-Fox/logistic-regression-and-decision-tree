{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Ew1TQRDVXPMvE1rSb0QT0q2-YD_9ODYD","timestamp":1670059180290},{"file_id":"1OeZroj1ffX60QNVqaoKM3ENS8WCGOvpj","timestamp":1670055835291},{"file_id":"1x2Z393KVFzpRcEIX3aFRDOkvzRHB26Wb","timestamp":1670055669276},{"file_id":"1bCec9SwOPK2KEo0DgPEus2x0X7xxfoQN","timestamp":1670052586532},{"file_id":"1mYyL_z86qXwxf45JO7qGwlYfl58_8Ski","timestamp":1670004821639},{"file_id":"1RqZlazvHfM51RAJEYO3w8s9xS_QrC10K","timestamp":1669936838738},{"file_id":"1-FmfAyTiYGtKKVvrBy4FaCaBhCesMMTW","timestamp":1669751954140}],"authorship_tag":"ABX9TyMi/DezNlRKAFWLFzQooOHv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","Описание набора данных"],"metadata":{"id":"kHmWoz99eRI7"}},{"cell_type":"markdown","source":["Набор данных первоначально получен из National Institute of Diabetes and Digestive and Kidney\n","Diseases. Цель набора данных - диагностически предсказать, есть ли у пациента диабет,\n","на основе определенных диагностических измерений, включенных в набор данных.\n","На выбор этих экземпляров из более крупной базы данных было наложено несколько ограничений. В частности, все пациенты здесь - женщины\n","в возрасте не менее 21 года индийского происхождения Пима.2"],"metadata":{"id":"RJspfqZcT5do"}},{"cell_type":"markdown","source":["Признак  | Описание\n","-------------------|--------------------\n","Pregnancies      | количество беременностей\n","Glucose       |уровень глюкозы в крови\n","BloodPressure     | кровяное давление\n","SkinThickness     | толщина кожи \n","Insulin     | уровнь инсулина в крови\n","BMI     | индекс массы тела\n","Age    | возраст\n","DiabetesPedigreeFunction    | процент выраженности диабета\n","Outcome    |Результат:  1 означает \"Да\", а 0 - \"Нет\"\n"],"metadata":{"id":"S_Vmb2wVQJgx"}},{"cell_type":"markdown","source":["Загрузка и предварительная обработка данных"],"metadata":{"id":"v83SdAqUZ-Ee"}},{"cell_type":"markdown","source":["Загрузим библиотеки"],"metadata":{"id":"BuCCRA9LQBh5"}},{"cell_type":"code","execution_count":61,"metadata":{"id":"QEEpGwXFW_Bv","executionInfo":{"status":"ok","timestamp":1670077950303,"user_tz":-180,"elapsed":424,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn import preprocessing \n","from sklearn import metrics\n","from numpy import sqrt"]},{"cell_type":"markdown","source":["Загрузим данные в датафрейм"],"metadata":{"id":"NuDp1L7FaBk-"}},{"cell_type":"code","source":["data = pd.read_csv('diabetes.csv',\n","                  delimiter =',',\n","                  decimal='.')\n","data"],"metadata":{"id":"49DKPUkheJmD","executionInfo":{"status":"ok","timestamp":1670078083362,"user_tz":-180,"elapsed":391,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"60115861-1cf0-4fc0-df07-c7064ae93a83"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","4              0      137             40             35      168  43.1   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  Outcome  \n","0                       0.627   50        1  \n","1                       0.351   31        0  \n","2                       0.672   32        1  \n","3                       0.167   21        0  \n","4                       2.288   33        1  \n","..                        ...  ...      ...  \n","763                     0.171   63        0  \n","764                     0.340   27        0  \n","765                     0.245   30        0  \n","766                     0.349   47        1  \n","767                     0.315   23        0  \n","\n","[768 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-3e64a880-948a-42f2-8253-6a74f13a91c4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>137</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>168</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>768 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e64a880-948a-42f2-8253-6a74f13a91c4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3e64a880-948a-42f2-8253-6a74f13a91c4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3e64a880-948a-42f2-8253-6a74f13a91c4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":62}]},{"cell_type":"markdown","source":["Узнаем больше о столбцах, с которыми мы имеем дело:"],"metadata":{"id":"HTTOdMwSaZ0l"}},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JFXStgAU9chw","executionInfo":{"status":"ok","timestamp":1670073403228,"user_tz":-180,"elapsed":265,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"31d6052a-e01e-4b6b-ee68-09e76bf4633f"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 768 entries, 0 to 767\n","Data columns (total 9 columns):\n"," #   Column                    Non-Null Count  Dtype  \n","---  ------                    --------------  -----  \n"," 0   Pregnancies               768 non-null    int64  \n"," 1   Glucose                   768 non-null    int64  \n"," 2   BloodPressure             768 non-null    int64  \n"," 3   SkinThickness             768 non-null    int64  \n"," 4   Insulin                   768 non-null    int64  \n"," 5   BMI                       768 non-null    float64\n"," 6   DiabetesPedigreeFunction  768 non-null    float64\n"," 7   Age                       768 non-null    int64  \n"," 8   Outcome                   768 non-null    int64  \n","dtypes: float64(2), int64(7)\n","memory usage: 54.1 KB\n"]}]},{"cell_type":"markdown","source":["Все данныыые числовые, нулевых значнений нет.\n","Проверим, есть ли пропуски в данных:"],"metadata":{"id":"rPFVXJEsbFMt"}},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yk2MD87V-5rq","executionInfo":{"status":"ok","timestamp":1670078345014,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"355a83cd-739a-4163-a69a-23502704d5f2"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pregnancies                 0\n","Glucose                     0\n","BloodPressure               0\n","SkinThickness               0\n","Insulin                     0\n","BMI                         0\n","DiabetesPedigreeFunction    0\n","Age                         0\n","Outcome                     0\n","dtype: int64"]},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","source":["Скоприуем базу"],"metadata":{"id":"1R4yeN-1bb_H"}},{"cell_type":"code","source":["data2 = data.copy()"],"metadata":{"id":"v_ZotSnORJwp","executionInfo":{"status":"ok","timestamp":1670078393660,"user_tz":-180,"elapsed":263,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":64,"outputs":[]},{"cell_type":"markdown","source":["Удаление дубликатов.\n","Сначала посмотрим сколько строк всего."],"metadata":{"id":"6vVu2HMaEcBF"}},{"cell_type":"code","source":["data2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AzpsB8FnEaGV","executionInfo":{"status":"ok","timestamp":1670078408766,"user_tz":-180,"elapsed":258,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"72c472ed-b257-4ea0-a5e6-d33ff7d35622"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(768, 9)"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["Удалим дублирующие записи и обновим данные о размере данных"],"metadata":{"id":"Y-iGW8g1FIoU"}},{"cell_type":"code","source":["data2 = data2.drop_duplicates()\n","data2.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z1KdSe1AFA2l","executionInfo":{"status":"ok","timestamp":1670078411547,"user_tz":-180,"elapsed":267,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"e04c7416-ec76-47bf-bc67-5087d4803fce"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(768, 9)"]},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["дубликатов нет"],"metadata":{"id":"eX2yc2J6FpFi"}},{"cell_type":"markdown","source":["Посмотрим основные статистики, посчитанные по данному набору данных"],"metadata":{"id":"sLPmjhdcGZwI"}},{"cell_type":"code","source":["data2.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"h8rp5bC5GalI","executionInfo":{"status":"ok","timestamp":1670078417080,"user_tz":-180,"elapsed":308,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"f3ac45de-73cf-4163-dc4d-bc5c601c706c"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Pregnancies     Glucose  BloodPressure  SkinThickness     Insulin  \\\n","count   768.000000  768.000000     768.000000     768.000000  768.000000   \n","mean      3.845052  120.894531      69.105469      20.536458   79.799479   \n","std       3.369578   31.972618      19.355807      15.952218  115.244002   \n","min       0.000000    0.000000       0.000000       0.000000    0.000000   \n","25%       1.000000   99.000000      62.000000       0.000000    0.000000   \n","50%       3.000000  117.000000      72.000000      23.000000   30.500000   \n","75%       6.000000  140.250000      80.000000      32.000000  127.250000   \n","max      17.000000  199.000000     122.000000      99.000000  846.000000   \n","\n","              BMI  DiabetesPedigreeFunction         Age     Outcome  \n","count  768.000000                768.000000  768.000000  768.000000  \n","mean    31.992578                  0.471876   33.240885    0.348958  \n","std      7.884160                  0.331329   11.760232    0.476951  \n","min      0.000000                  0.078000   21.000000    0.000000  \n","25%     27.300000                  0.243750   24.000000    0.000000  \n","50%     32.000000                  0.372500   29.000000    0.000000  \n","75%     36.600000                  0.626250   41.000000    1.000000  \n","max     67.100000                  2.420000   81.000000    1.000000  "],"text/html":["\n","  <div id=\"df-c5194a2f-8f95-4597-9968-9f57f5a2b4cf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","      <td>768.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.845052</td>\n","      <td>120.894531</td>\n","      <td>69.105469</td>\n","      <td>20.536458</td>\n","      <td>79.799479</td>\n","      <td>31.992578</td>\n","      <td>0.471876</td>\n","      <td>33.240885</td>\n","      <td>0.348958</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.369578</td>\n","      <td>31.972618</td>\n","      <td>19.355807</td>\n","      <td>15.952218</td>\n","      <td>115.244002</td>\n","      <td>7.884160</td>\n","      <td>0.331329</td>\n","      <td>11.760232</td>\n","      <td>0.476951</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.078000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>99.000000</td>\n","      <td>62.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>27.300000</td>\n","      <td>0.243750</td>\n","      <td>24.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>117.000000</td>\n","      <td>72.000000</td>\n","      <td>23.000000</td>\n","      <td>30.500000</td>\n","      <td>32.000000</td>\n","      <td>0.372500</td>\n","      <td>29.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>6.000000</td>\n","      <td>140.250000</td>\n","      <td>80.000000</td>\n","      <td>32.000000</td>\n","      <td>127.250000</td>\n","      <td>36.600000</td>\n","      <td>0.626250</td>\n","      <td>41.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>17.000000</td>\n","      <td>199.000000</td>\n","      <td>122.000000</td>\n","      <td>99.000000</td>\n","      <td>846.000000</td>\n","      <td>67.100000</td>\n","      <td>2.420000</td>\n","      <td>81.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5194a2f-8f95-4597-9968-9f57f5a2b4cf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c5194a2f-8f95-4597-9968-9f57f5a2b4cf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c5194a2f-8f95-4597-9968-9f57f5a2b4cf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.rcParams[\"figure.figsize\"] = (20,10)\n","\n","index = 1\n","for column in data2.columns:\n","    plt.subplot(3,4,index)\n","    plt.title(column)\n","    plt.hist(data2[column], label=column)\n","    index += 1\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"lkwUoRvFItuM","executionInfo":{"status":"ok","timestamp":1670073490881,"user_tz":-180,"elapsed":1911,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"5ced1b90-48b1-4351-abf7-0c4214fc01b2"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 9 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["ills = data2.loc[data2['Outcome'] == 1, :]\n","\n","plt.rcParams[\"figure.figsize\"] = (20,10)\n","index = 1\n","for column in data2.columns:\n","    plt.title(column)\n","    plt.subplot(3,4,index)\n","    plt.hist(ills[column], label=column, color='r')\n","    index += 1\n","plt.show()\n","print(ills.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":625},"id":"zn9vAGmQIzWM","executionInfo":{"status":"ok","timestamp":1670073518408,"user_tz":-180,"elapsed":1452,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"f9183a3f-c5f0-44f1-8037-fa8625ca0e4b"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 9 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["(268, 9)\n"]}]},{"cell_type":"markdown","source":["Для того чтобы проверить, что мы ничего не упустили, давайте посмотрим на ящики с усами (boxplot)."],"metadata":{"id":"mLeKEf7uKdaQ"}},{"cell_type":"code","source":["data2.boxplot(figsize=(15,10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":610},"id":"LYLZBa0AKfgI","executionInfo":{"status":"ok","timestamp":1670073598339,"user_tz":-180,"elapsed":17071,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"4ed72814-e969-4b0f-9ae9-adac3a34c7c6"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd8a4a71190>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x720 with 1 Axes>"],"image/png":"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ti0zMzPZt29fBoPBuEsDgBWmRwIwsS6++OJs3749d99998r0yDe+8Y25+OKLx10aAKww0gbARCulfMv7ADBuRtoAmFh/9md/lve9732rlvzfuXNnrrnmmnGXBgArjLQBMLEajUYuvfTS7NmzJ7t3786ePXty6aWXptFojLs0AFghtAEwsTqdTtrtdhYWFnL48OEsLCyk3W6n0+mMuzQAWGF6JAATq9Vq5aGHHsqrX/3qHDx4MJs3b851113nGm0A1IrQBsDE6vf7eeCBB/Lggw+uurj2y172MsENgNowPRKAieXi2gBsBEIbABNrMBhkdnZ2Vdvs7KyLawNQK0IbABOr0WhkaWlpVdvS0pLVIwGoFaENgIll9UgANgILkQAwsY4uNnLsxbW73a5FSACoFaENgInWarXSarWyuLiYubm5cZcDAMcxPRIAAKDGhDYAAIAaE9oAmGj9fj8zMzPZtm1bZmZm0u/3x10SAKzinDYAJla/30+n00mv18vy8nKmpqbSbreTxGIkANSGkTYAJla3202v10uz2cz09HSazWZ6vV663e64SwOAFUIbABNrMBhkdnZ2Vdvs7GwGg8GYKgKA45keCcDEajQaufXWW3PfffetXKftDW94QxqNxrhLA4AVQhsAE6vZbGbnzp3ZuXNntm7dmr1792bHjh254YYbxl0aAKwQ2gCYWAsLC9mxY0fuuuuulZG2HTt25L777ht3aQCwwjltAEyswWCQl770pavaXvrSlzqnDYBaEdoAmFgXX3xx5ufns3///lRVlf3792d+fj4XX3zxuEsDgBVCGwAT6xvf+EaefPLJzM/P5yMf+Ujm5+fz5JNP5hvf+Ma4SwOAFc5pA2Bi/eVf/mUuuOCCvPWtb11pu+CCC/LYY4+NsSoAWM1IGwAT7bHHHsvrXve6/PZv/3Ze97rXCWwA1I7QBsBE27x5c372Z3825557bn72Z382mzdvHndJALCK6ZEATLSzzjorr3rVq/L000/nrLPOyubNm3Pw4MFxlwUAK4y0ATDRDh06lEsuuSSllFxyySU5dOjQuEsCgFWENgAm1ubNm3Po0KF87/d+bz70oQ/le7/3e3Po0CFTJAGoFdMjAZhYTz/9dGZmZnL//ffn/vvvT5LMzMxk7969Y64MAP6a0AbAGamUckrb7dmz54T3T/b8qqqeW2EAcJpMjwTg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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Много выбросов. Удалим экстимальные.\n","Посчитаем кваритили:"],"metadata":{"id":"yVD7p-SIdNkG"}},{"cell_type":"code","source":["def find_outliers_IQR(data, name):\n","   q1 = np.percentile(data, 25, interpolation = 'midpoint') \n","   q3 = np.percentile(data, 75, interpolation = 'midpoint') \n","   IQR=q3-q1\n","   lowerlim = q1 - 3 * IQR\n","   upperlim = q3 + 3 * IQR\n","   outliers = data[((data < lowerlim) | (data>upperlim))]\n","   print(f'Variable Names :{name}')\n","   print(f'Number of Outliers : {len(outliers)}')\n","   print(f'Lower Limit Values : {lowerlim}')\n","   print(f'Upper Limit Values : {upperlim}')"],"metadata":{"id":"jYE_ZZabL-kk","executionInfo":{"status":"ok","timestamp":1670078889994,"user_tz":-180,"elapsed":268,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["Проверим выбросы для признака Pregnancies, экстримальных выбросов нет"],"metadata":{"id":"f1-gtiJ3dyum"}},{"cell_type":"code","source":["find_outliers_IQR(data2['Pregnancies'], 'Pregnancies')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jTpbL-EnNkLh","executionInfo":{"status":"ok","timestamp":1670079053771,"user_tz":-180,"elapsed":272,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"780a18f0-5463-4667-faf1-b39801f0b587"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :Pregnancies\n","Number of Outliers : 0\n","Lower Limit Values : -14.0\n","Upper Limit Values : 21.0\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака Glucose, экстримальных выбросов нет"],"metadata":{"id":"irQNykRteSe9"}},{"cell_type":"code","source":["find_outliers_IQR(data2['Glucose'], 'Glucose')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hu4U5TUSHxjC","executionInfo":{"status":"ok","timestamp":1670079160386,"user_tz":-180,"elapsed":298,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"9212ab41-73e7-4c44-8283-a86e6cfcfc70"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :Glucose\n","Number of Outliers : 0\n","Lower Limit Values : -25.5\n","Upper Limit Values : 265.0\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака BloodPressure, экстримальных выбросов 35"],"metadata":{"id":"fMkHjkXHeeLM"}},{"cell_type":"code","source":["find_outliers_IQR(data2['BloodPressure'], 'BloodPressure')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"84TyGfnIH8Ba","executionInfo":{"status":"ok","timestamp":1670079226983,"user_tz":-180,"elapsed":297,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"423d2c15-50f4-4cac-c10b-5f6f5d488680"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :BloodPressure\n","Number of Outliers : 35\n","Lower Limit Values : 8.0\n","Upper Limit Values : 134.0\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака SkinThickness, экстримальных выбросов нет"],"metadata":{"id":"WAUxSkp4et8N"}},{"cell_type":"code","source":["find_outliers_IQR(data2['SkinThickness'], 'SkinThickness')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bg5f4U4yIHUZ","executionInfo":{"status":"ok","timestamp":1670079277169,"user_tz":-180,"elapsed":302,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"7c8ab7b5-ebcc-4b80-8cab-b0449e9e480a"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :SkinThickness\n","Number of Outliers : 0\n","Lower Limit Values : -96.0\n","Upper Limit Values : 128.0\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака Insulin, экстримальных выбросов 8"],"metadata":{"id":"CoCRx_0ae5y8"}},{"cell_type":"code","source":["find_outliers_IQR(data2['Insulin'], 'Insulin')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yM6kZwKtUkB7","executionInfo":{"status":"ok","timestamp":1670079326193,"user_tz":-180,"elapsed":442,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"6c764857-d136-44f7-a0f0-dfd4b6ce0fb6"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :Insulin\n","Number of Outliers : 8\n","Lower Limit Values : -382.5\n","Upper Limit Values : 510.0\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака BMI, экстримальных выбросов 1"],"metadata":{"id":"hAsN5YacfEMM"}},{"cell_type":"code","source":["find_outliers_IQR(data2['BMI'], 'BMI')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QzrALgk6IXXI","executionInfo":{"status":"ok","timestamp":1670079363498,"user_tz":-180,"elapsed":283,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"9e49de75-3edc-4216-d523-d226826eba16"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :BMI\n","Number of Outliers : 1\n","Lower Limit Values : -0.6000000000000014\n","Upper Limit Values : 64.5\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака DiabetesPedigreeFunction, экстримальных выбросов 6"],"metadata":{"id":"yAVKAPh2fTcN"}},{"cell_type":"code","source":["find_outliers_IQR(data2['DiabetesPedigreeFunction'], 'DiabetesPedigreeFunction')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b1KHStEBIoMv","executionInfo":{"status":"ok","timestamp":1670073643529,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"769f77c1-be64-4daa-b1e0-1411d65d2cf6"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :DiabetesPedigreeFunction\n","Number of Outliers : 6\n","Lower Limit Values : -0.9055000000000002\n","Upper Limit Values : 1.7755000000000003\n"]}]},{"cell_type":"markdown","source":["Проверим выбросы для признака Age, экстримальных выбросов нет"],"metadata":{"id":"K4Y3O5Y4fbBm"}},{"cell_type":"code","source":["find_outliers_IQR(data2['Age'], 'Age')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WSDZ9paXI4QO","executionInfo":{"status":"ok","timestamp":1670073647954,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"a388bac7-7964-4b5b-bf8d-114e47fd7d4f"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Variable Names :Age\n","Number of Outliers : 0\n","Lower Limit Values : -27.0\n","Upper Limit Values : 92.0\n"]}]},{"cell_type":"markdown","source":["Удалим экстиамльные выбросы"],"metadata":{"id":"7rxV8xPy6iKn"}},{"cell_type":"code","source":["data_f = data2[((data2.BloodPressure >= 8) & (data2.BloodPressure <= 134)) & ((data2.Insulin <= 510.0)) & ((data2.BMI <= 64.5)) & ((data2.DiabetesPedigreeFunction <= 1.7755000000000003))]\n","data_f"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"DAw9OX4t6fG_","executionInfo":{"status":"ok","timestamp":1670076309373,"user_tz":-180,"elapsed":288,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"dea1bcae-a401-4b97-b378-a09bc26e091d"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","0              6      148             72             35        0  33.6   \n","1              1       85             66             29        0  26.6   \n","2              8      183             64              0        0  23.3   \n","3              1       89             66             23       94  28.1   \n","5              5      116             74              0        0  25.6   \n","..           ...      ...            ...            ...      ...   ...   \n","763           10      101             76             48      180  32.9   \n","764            2      122             70             27        0  36.8   \n","765            5      121             72             23      112  26.2   \n","766            1      126             60              0        0  30.1   \n","767            1       93             70             31        0  30.4   \n","\n","     DiabetesPedigreeFunction  Age  Outcome  \n","0                       0.627   50        1  \n","1                       0.351   31        0  \n","2                       0.672   32        1  \n","3                       0.167   21        0  \n","5                       0.201   30        0  \n","..                        ...  ...      ...  \n","763                     0.171   63        0  \n","764                     0.340   27        0  \n","765                     0.245   30        0  \n","766                     0.349   47        1  \n","767                     0.315   23        0  \n","\n","[674 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-c9371be9-b4a9-498e-8e0b-d9cb88cb9fb4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6</td>\n","      <td>148</td>\n","      <td>72</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>50</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>85</td>\n","      <td>66</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8</td>\n","      <td>183</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>89</td>\n","      <td>66</td>\n","      <td>23</td>\n","      <td>94</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>116</td>\n","      <td>74</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>25.6</td>\n","      <td>0.201</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>10</td>\n","      <td>101</td>\n","      <td>76</td>\n","      <td>48</td>\n","      <td>180</td>\n","      <td>32.9</td>\n","      <td>0.171</td>\n","      <td>63</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>2</td>\n","      <td>122</td>\n","      <td>70</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>36.8</td>\n","      <td>0.340</td>\n","      <td>27</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>5</td>\n","      <td>121</td>\n","      <td>72</td>\n","      <td>23</td>\n","      <td>112</td>\n","      <td>26.2</td>\n","      <td>0.245</td>\n","      <td>30</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>1</td>\n","      <td>126</td>\n","      <td>60</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30.1</td>\n","      <td>0.349</td>\n","      <td>47</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>1</td>\n","      <td>93</td>\n","      <td>70</td>\n","      <td>31</td>\n","      <td>0</td>\n","      <td>30.4</td>\n","      <td>0.315</td>\n","      <td>23</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>674 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9371be9-b4a9-498e-8e0b-d9cb88cb9fb4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9371be9-b4a9-498e-8e0b-d9cb88cb9fb4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9371be9-b4a9-498e-8e0b-d9cb88cb9fb4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["Проведем нормализацию данных, чтобы числовые показатели были соотносимы."],"metadata":{"id":"-HKQO-96hpBC"}},{"cell_type":"code","source":["data_f_norm = (data_f - data_f.min())/(data_f.max() - data_f.min())\n","data_f_norm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"8aM0MSIBdGuL","executionInfo":{"status":"ok","timestamp":1670080333935,"user_tz":-180,"elapsed":314,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"16e49de3-8001-4c8b-896c-4af08eb94dab"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies   Glucose  BloodPressure  SkinThickness   Insulin       BMI  \\\n","0       0.352941  0.747475       0.489796       0.353535  0.000000  0.586387   \n","1       0.058824  0.429293       0.428571       0.292929  0.000000  0.464223   \n","2       0.470588  0.924242       0.408163       0.000000  0.000000  0.406632   \n","3       0.058824  0.449495       0.428571       0.232323  0.184314  0.490401   \n","5       0.294118  0.585859       0.510204       0.000000  0.000000  0.446771   \n","..           ...       ...            ...            ...       ...       ...   \n","763     0.588235  0.510101       0.530612       0.484848  0.352941  0.574171   \n","764     0.117647  0.616162       0.469388       0.272727  0.000000  0.642234   \n","765     0.294118  0.611111       0.489796       0.232323  0.219608  0.457243   \n","766     0.058824  0.636364       0.367347       0.000000  0.000000  0.525305   \n","767     0.058824  0.469697       0.469388       0.313131  0.000000  0.530541   \n","\n","     DiabetesPedigreeFunction       Age  Outcome  \n","0                    0.597388  0.483333      1.0  \n","1                    0.297062  0.166667      0.0  \n","2                    0.646355  0.183333      1.0  \n","3                    0.096844  0.000000      0.0  \n","5                    0.133841  0.150000      0.0  \n","..                        ...       ...      ...  \n","763                  0.101197  0.700000      0.0  \n","764                  0.285092  0.100000      0.0  \n","765                  0.181719  0.150000      0.0  \n","766                  0.294886  0.433333      1.0  \n","767                  0.257889  0.033333      0.0  \n","\n","[674 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-8f24532a-5383-4f05-b177-f3ca23df1b37\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.352941</td>\n","      <td>0.747475</td>\n","      <td>0.489796</td>\n","      <td>0.353535</td>\n","      <td>0.000000</td>\n","      <td>0.586387</td>\n","      <td>0.597388</td>\n","      <td>0.483333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.058824</td>\n","      <td>0.429293</td>\n","      <td>0.428571</td>\n","      <td>0.292929</td>\n","      <td>0.000000</td>\n","      <td>0.464223</td>\n","      <td>0.297062</td>\n","      <td>0.166667</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.470588</td>\n","      <td>0.924242</td>\n","      <td>0.408163</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.406632</td>\n","      <td>0.646355</td>\n","      <td>0.183333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.058824</td>\n","      <td>0.449495</td>\n","      <td>0.428571</td>\n","      <td>0.232323</td>\n","      <td>0.184314</td>\n","      <td>0.490401</td>\n","      <td>0.096844</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0.294118</td>\n","      <td>0.585859</td>\n","      <td>0.510204</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.446771</td>\n","      <td>0.133841</td>\n","      <td>0.150000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>763</th>\n","      <td>0.588235</td>\n","      <td>0.510101</td>\n","      <td>0.530612</td>\n","      <td>0.484848</td>\n","      <td>0.352941</td>\n","      <td>0.574171</td>\n","      <td>0.101197</td>\n","      <td>0.700000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>764</th>\n","      <td>0.117647</td>\n","      <td>0.616162</td>\n","      <td>0.469388</td>\n","      <td>0.272727</td>\n","      <td>0.000000</td>\n","      <td>0.642234</td>\n","      <td>0.285092</td>\n","      <td>0.100000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>765</th>\n","      <td>0.294118</td>\n","      <td>0.611111</td>\n","      <td>0.489796</td>\n","      <td>0.232323</td>\n","      <td>0.219608</td>\n","      <td>0.457243</td>\n","      <td>0.181719</td>\n","      <td>0.150000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>766</th>\n","      <td>0.058824</td>\n","      <td>0.636364</td>\n","      <td>0.367347</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.525305</td>\n","      <td>0.294886</td>\n","      <td>0.433333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>767</th>\n","      <td>0.058824</td>\n","      <td>0.469697</td>\n","      <td>0.469388</td>\n","      <td>0.313131</td>\n","      <td>0.000000</td>\n","      <td>0.530541</td>\n","      <td>0.257889</td>\n","      <td>0.033333</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>674 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f24532a-5383-4f05-b177-f3ca23df1b37')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8f24532a-5383-4f05-b177-f3ca23df1b37 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8f24532a-5383-4f05-b177-f3ca23df1b37');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["data_f_norm.boxplot(figsize=(15,10))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":610},"id":"ddIMLruGko9y","executionInfo":{"status":"ok","timestamp":1670080825062,"user_tz":-180,"elapsed":1256,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"f8234a48-761e-471a-842b-ddc05b3dc43b"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd8a3e3b4c0>"]},"metadata":{},"execution_count":79},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Разделим данные на тренировочные и тестовые (80% строк — тренировочные, остальные — тестовые)."],"metadata":{"id":"1acmIRyTQTtn"}},{"cell_type":"code","source":["train = data_f_norm.sample(frac=0.80, random_state=2022)\n","test = data_f_norm.drop(train.index)"],"metadata":{"id":"OVHnFDnCQUd2","executionInfo":{"status":"ok","timestamp":1670080838791,"user_tz":-180,"elapsed":278,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":80,"outputs":[]},{"cell_type":"code","source":["train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"O3MekIh4yqdJ","executionInfo":{"status":"ok","timestamp":1670080968851,"user_tz":-180,"elapsed":462,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"315ade63-dea8-4ddd-bca3-47b29d716e61"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies   Glucose  BloodPressure  SkinThickness   Insulin       BMI  \\\n","328     0.117647  0.515152       0.632653       0.363636  0.235294  0.794066   \n","741     0.176471  0.515152       0.204082       0.202020  0.184314  0.537522   \n","567     0.352941  0.464646       0.387755       0.323232  0.247059  0.558464   \n","312     0.117647  0.782828       0.510204       0.171717  0.188235  0.464223   \n","630     0.411765  0.575758       0.408163       0.000000  0.000000  0.478185   \n","..           ...       ...            ...            ...       ...       ...   \n","640     0.000000  0.515152       0.632653       0.171717  0.205882  0.511344   \n","233     0.235294  0.616162       0.448980       0.000000  0.000000  0.610820   \n","6       0.176471  0.393939       0.265306       0.323232  0.172549  0.541012   \n","695     0.411765  0.717172       0.673469       0.242424  0.941176  0.530541   \n","511     0.000000  0.702020       0.387755       0.171717  0.411765  0.385689   \n","\n","     DiabetesPedigreeFunction       Age  Outcome  \n","328                  0.053319  0.033333      1.0  \n","741                  0.350381  0.083333      0.0  \n","567                  0.007617  0.416667      0.0  \n","312                  0.386289  0.100000      1.0  \n","630                  0.711643  0.216667      1.0  \n","..                        ...       ...      ...  \n","640                  0.671382  0.100000      0.0  \n","233                  0.343852  0.133333      0.0  \n","6                    0.184984  0.083333      1.0  \n","695                  0.054407  0.366667      1.0  \n","511                  0.140370  0.000000      0.0  \n","\n","[539 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-d8526211-8fc3-4b62-b014-ed9ef98e1ecc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>328</th>\n","      <td>0.117647</td>\n","      <td>0.515152</td>\n","      <td>0.632653</td>\n","      <td>0.363636</td>\n","      <td>0.235294</td>\n","      <td>0.794066</td>\n","      <td>0.053319</td>\n","      <td>0.033333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>0.176471</td>\n","      <td>0.515152</td>\n","      <td>0.204082</td>\n","      <td>0.202020</td>\n","      <td>0.184314</td>\n","      <td>0.537522</td>\n","      <td>0.350381</td>\n","      <td>0.083333</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>0.352941</td>\n","      <td>0.464646</td>\n","      <td>0.387755</td>\n","      <td>0.323232</td>\n","      <td>0.247059</td>\n","      <td>0.558464</td>\n","      <td>0.007617</td>\n","      <td>0.416667</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0.117647</td>\n","      <td>0.782828</td>\n","      <td>0.510204</td>\n","      <td>0.171717</td>\n","      <td>0.188235</td>\n","      <td>0.464223</td>\n","      <td>0.386289</td>\n","      <td>0.100000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>630</th>\n","      <td>0.411765</td>\n","      <td>0.575758</td>\n","      <td>0.408163</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.478185</td>\n","      <td>0.711643</td>\n","      <td>0.216667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>640</th>\n","      <td>0.000000</td>\n","      <td>0.515152</td>\n","      <td>0.632653</td>\n","      <td>0.171717</td>\n","      <td>0.205882</td>\n","      <td>0.511344</td>\n","      <td>0.671382</td>\n","      <td>0.100000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>0.235294</td>\n","      <td>0.616162</td>\n","      <td>0.448980</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.610820</td>\n","      <td>0.343852</td>\n","      <td>0.133333</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.176471</td>\n","      <td>0.393939</td>\n","      <td>0.265306</td>\n","      <td>0.323232</td>\n","      <td>0.172549</td>\n","      <td>0.541012</td>\n","      <td>0.184984</td>\n","      <td>0.083333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>695</th>\n","      <td>0.411765</td>\n","      <td>0.717172</td>\n","      <td>0.673469</td>\n","      <td>0.242424</td>\n","      <td>0.941176</td>\n","      <td>0.530541</td>\n","      <td>0.054407</td>\n","      <td>0.366667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>511</th>\n","      <td>0.000000</td>\n","      <td>0.702020</td>\n","      <td>0.387755</td>\n","      <td>0.171717</td>\n","      <td>0.411765</td>\n","      <td>0.385689</td>\n","      <td>0.140370</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>539 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8526211-8fc3-4b62-b014-ed9ef98e1ecc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d8526211-8fc3-4b62-b014-ed9ef98e1ecc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d8526211-8fc3-4b62-b014-ed9ef98e1ecc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"XL2jkYoRs9vT","executionInfo":{"status":"ok","timestamp":1670080972263,"user_tz":-180,"elapsed":446,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"475f7219-ce70-4494-9e78-aeaf1450b246"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies   Glucose  BloodPressure  SkinThickness   Insulin       BMI  \\\n","0       0.352941  0.747475       0.489796       0.353535  0.000000  0.586387   \n","17      0.411765  0.540404       0.510204       0.000000  0.000000  0.516579   \n","18      0.058824  0.520202       0.061224       0.383838  0.162745  0.755672   \n","20      0.176471  0.636364       0.653061       0.414141  0.460784  0.685864   \n","24      0.647059  0.722222       0.714286       0.333333  0.286275  0.638743   \n","..           ...       ...            ...            ...       ...       ...   \n","748     0.176471  0.944444       0.469388       0.222222  0.392157  0.635253   \n","758     0.058824  0.535354       0.530612       0.000000  0.000000  0.654450   \n","760     0.117647  0.444444       0.346939       0.262626  0.031373  0.495637   \n","761     0.529412  0.858586       0.510204       0.313131  0.000000  0.767888   \n","762     0.529412  0.449495       0.387755       0.000000  0.000000  0.392670   \n","\n","     DiabetesPedigreeFunction       Age  Outcome  \n","0                    0.597388  0.483333      1.0  \n","17                   0.191513  0.166667      1.0  \n","18                   0.114255  0.200000      0.0  \n","20                   0.681175  0.100000      0.0  \n","24                   0.191513  0.500000      1.0  \n","..                        ...       ...      ...  \n","748                  0.359086  0.250000      1.0  \n","758                  0.129489  0.083333      0.0  \n","760                  0.748640  0.016667      0.0  \n","761                  0.353645  0.366667      1.0  \n","762                  0.069641  0.200000      0.0  \n","\n","[135 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-5625789d-e92e-4a3b-b30d-8b908e455916\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.352941</td>\n","      <td>0.747475</td>\n","      <td>0.489796</td>\n","      <td>0.353535</td>\n","      <td>0.000000</td>\n","      <td>0.586387</td>\n","      <td>0.597388</td>\n","      <td>0.483333</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.411765</td>\n","      <td>0.540404</td>\n","      <td>0.510204</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.516579</td>\n","      <td>0.191513</td>\n","      <td>0.166667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.058824</td>\n","      <td>0.520202</td>\n","      <td>0.061224</td>\n","      <td>0.383838</td>\n","      <td>0.162745</td>\n","      <td>0.755672</td>\n","      <td>0.114255</td>\n","      <td>0.200000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.176471</td>\n","      <td>0.636364</td>\n","      <td>0.653061</td>\n","      <td>0.414141</td>\n","      <td>0.460784</td>\n","      <td>0.685864</td>\n","      <td>0.681175</td>\n","      <td>0.100000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.647059</td>\n","      <td>0.722222</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.286275</td>\n","      <td>0.638743</td>\n","      <td>0.191513</td>\n","      <td>0.500000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>748</th>\n","      <td>0.176471</td>\n","      <td>0.944444</td>\n","      <td>0.469388</td>\n","      <td>0.222222</td>\n","      <td>0.392157</td>\n","      <td>0.635253</td>\n","      <td>0.359086</td>\n","      <td>0.250000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>758</th>\n","      <td>0.058824</td>\n","      <td>0.535354</td>\n","      <td>0.530612</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.654450</td>\n","      <td>0.129489</td>\n","      <td>0.083333</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>760</th>\n","      <td>0.117647</td>\n","      <td>0.444444</td>\n","      <td>0.346939</td>\n","      <td>0.262626</td>\n","      <td>0.031373</td>\n","      <td>0.495637</td>\n","      <td>0.748640</td>\n","      <td>0.016667</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>761</th>\n","      <td>0.529412</td>\n","      <td>0.858586</td>\n","      <td>0.510204</td>\n","      <td>0.313131</td>\n","      <td>0.000000</td>\n","      <td>0.767888</td>\n","      <td>0.353645</td>\n","      <td>0.366667</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>762</th>\n","      <td>0.529412</td>\n","      <td>0.449495</td>\n","      <td>0.387755</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.392670</td>\n","      <td>0.069641</td>\n","      <td>0.200000</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>135 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5625789d-e92e-4a3b-b30d-8b908e455916')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5625789d-e92e-4a3b-b30d-8b908e455916 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5625789d-e92e-4a3b-b30d-8b908e455916');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["*Логистическая регрессия*"],"metadata":{"id":"n0d9tHdBS6Ak"}},{"cell_type":"markdown","source":["Отбирем данные для предикторов, удалим последний столбец, индекс не включается в данные автоматически."],"metadata":{"id":"x-tGs3EUTM_z"}},{"cell_type":"code","source":["X = pd.DataFrame(train.drop(['Outcome'], axis=1))\n","X"],"metadata":{"id":"-TdW9Rz9TfM7","executionInfo":{"status":"ok","timestamp":1670081128708,"user_tz":-180,"elapsed":302,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"colab":{"base_uri":"https://localhost:8080/","height":423},"outputId":"4d2fbe62-4239-4c9e-a3a1-d05cbda8a227"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Pregnancies   Glucose  BloodPressure  SkinThickness   Insulin       BMI  \\\n","328     0.117647  0.515152       0.632653       0.363636  0.235294  0.794066   \n","741     0.176471  0.515152       0.204082       0.202020  0.184314  0.537522   \n","567     0.352941  0.464646       0.387755       0.323232  0.247059  0.558464   \n","312     0.117647  0.782828       0.510204       0.171717  0.188235  0.464223   \n","630     0.411765  0.575758       0.408163       0.000000  0.000000  0.478185   \n","..           ...       ...            ...            ...       ...       ...   \n","640     0.000000  0.515152       0.632653       0.171717  0.205882  0.511344   \n","233     0.235294  0.616162       0.448980       0.000000  0.000000  0.610820   \n","6       0.176471  0.393939       0.265306       0.323232  0.172549  0.541012   \n","695     0.411765  0.717172       0.673469       0.242424  0.941176  0.530541   \n","511     0.000000  0.702020       0.387755       0.171717  0.411765  0.385689   \n","\n","     DiabetesPedigreeFunction       Age  \n","328                  0.053319  0.033333  \n","741                  0.350381  0.083333  \n","567                  0.007617  0.416667  \n","312                  0.386289  0.100000  \n","630                  0.711643  0.216667  \n","..                        ...       ...  \n","640                  0.671382  0.100000  \n","233                  0.343852  0.133333  \n","6                    0.184984  0.083333  \n","695                  0.054407  0.366667  \n","511                  0.140370  0.000000  \n","\n","[539 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-f7df6572-c1be-4d77-a698-af496ec0c240\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>328</th>\n","      <td>0.117647</td>\n","      <td>0.515152</td>\n","      <td>0.632653</td>\n","      <td>0.363636</td>\n","      <td>0.235294</td>\n","      <td>0.794066</td>\n","      <td>0.053319</td>\n","      <td>0.033333</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>0.176471</td>\n","      <td>0.515152</td>\n","      <td>0.204082</td>\n","      <td>0.202020</td>\n","      <td>0.184314</td>\n","      <td>0.537522</td>\n","      <td>0.350381</td>\n","      <td>0.083333</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>0.352941</td>\n","      <td>0.464646</td>\n","      <td>0.387755</td>\n","      <td>0.323232</td>\n","      <td>0.247059</td>\n","      <td>0.558464</td>\n","      <td>0.007617</td>\n","      <td>0.416667</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>0.117647</td>\n","      <td>0.782828</td>\n","      <td>0.510204</td>\n","      <td>0.171717</td>\n","      <td>0.188235</td>\n","      <td>0.464223</td>\n","      <td>0.386289</td>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>630</th>\n","      <td>0.411765</td>\n","      <td>0.575758</td>\n","      <td>0.408163</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.478185</td>\n","      <td>0.711643</td>\n","      <td>0.216667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>640</th>\n","      <td>0.000000</td>\n","      <td>0.515152</td>\n","      <td>0.632653</td>\n","      <td>0.171717</td>\n","      <td>0.205882</td>\n","      <td>0.511344</td>\n","      <td>0.671382</td>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>233</th>\n","      <td>0.235294</td>\n","      <td>0.616162</td>\n","      <td>0.448980</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.610820</td>\n","      <td>0.343852</td>\n","      <td>0.133333</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.176471</td>\n","      <td>0.393939</td>\n","      <td>0.265306</td>\n","      <td>0.323232</td>\n","      <td>0.172549</td>\n","      <td>0.541012</td>\n","      <td>0.184984</td>\n","      <td>0.083333</td>\n","    </tr>\n","    <tr>\n","      <th>695</th>\n","      <td>0.411765</td>\n","      <td>0.717172</td>\n","      <td>0.673469</td>\n","      <td>0.242424</td>\n","      <td>0.941176</td>\n","      <td>0.530541</td>\n","      <td>0.054407</td>\n","      <td>0.366667</td>\n","    </tr>\n","    <tr>\n","      <th>511</th>\n","      <td>0.000000</td>\n","      <td>0.702020</td>\n","      <td>0.387755</td>\n","      <td>0.171717</td>\n","      <td>0.411765</td>\n","      <td>0.385689</td>\n","      <td>0.140370</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>539 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7df6572-c1be-4d77-a698-af496ec0c240')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7df6572-c1be-4d77-a698-af496ec0c240 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7df6572-c1be-4d77-a698-af496ec0c240');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["Отбираем столбец для отклика"],"metadata":{"id":"NjVUu8uBT5Vq"}},{"cell_type":"code","source":["y = pd.DataFrame(train['Outcome'])"],"metadata":{"id":"ZINrGwXGT-tp","executionInfo":{"status":"ok","timestamp":1670081036852,"user_tz":-180,"elapsed":342,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["y.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7jSt5I6KUW1y","executionInfo":{"status":"ok","timestamp":1670081582509,"user_tz":-180,"elapsed":297,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"60c9ceb3-78cf-4b76-b49c-357b7f21237b"},"execution_count":90,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Outcome\n","328      1.0\n","741      0.0\n","567      0.0\n","312      1.0\n","630      1.0"],"text/html":["\n","  <div id=\"df-9ce9c30e-111f-4306-914d-729be44d2900\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>328</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>741</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>567</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>312</th>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>630</th>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ce9c30e-111f-4306-914d-729be44d2900')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9ce9c30e-111f-4306-914d-729be44d2900 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9ce9c30e-111f-4306-914d-729be44d2900');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["Обучение модели логистической регрессии"],"metadata":{"id":"XgU16GmFUeF6"}},{"cell_type":"markdown","source":["Подключим модель логистической регрессии из библиотеки sklearn\n"],"metadata":{"id":"DXycECr1Uupp"}},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression"],"metadata":{"id":"cCqi5HEfUyu5","executionInfo":{"status":"ok","timestamp":1670081163252,"user_tz":-180,"elapsed":485,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":88,"outputs":[]},{"cell_type":"code","source":["y.values.ravel()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ov1lYgsaUiaJ","executionInfo":{"status":"ok","timestamp":1670081202750,"user_tz":-180,"elapsed":311,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"e8453440-f0fd-4049-85f6-9b25f2ddb119"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1.,\n","       0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0.,\n","       1., 0., 1., 1., 1., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.,\n","       1., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1.,\n","       0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0.,\n","       0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 1., 1.,\n","       0., 1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,\n","       1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,\n","       0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.,\n","       0., 1., 0., 0., 1., 0., 0., 1., 0., 0., 1., 0., 1., 0., 1., 0., 1.,\n","       0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 1., 0.,\n","       0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0.,\n","       0., 0., 0., 0., 1., 0., 1., 1., 1., 1., 1., 1., 0., 1., 0., 0., 1.,\n","       1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1.,\n","       0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 1., 1.,\n","       0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","       1., 1., 0., 1., 0., 0., 1., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.,\n","       0., 1., 0., 1., 1., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,\n","       0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0., 1.,\n","       0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 1., 0.,\n","       1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 1., 0., 0., 0.,\n","       1., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1., 0., 0., 1., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1.,\n","       0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 1.,\n","       0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0.,\n","       0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0.,\n","       1., 0., 0., 1., 1., 0., 1., 0., 0., 1., 1., 0.])"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["reg = LogisticRegression(random_state=2022, solver='lbfgs').fit(X, y.values.ravel())"],"metadata":{"id":"R0E2LujaVU6x","executionInfo":{"status":"ok","timestamp":1670074700415,"user_tz":-180,"elapsed":411,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":47,"outputs":[]},{"cell_type":"markdown","source":["параметры модели"],"metadata":{"id":"AyFVo8Uerlor"}},{"cell_type":"markdown","source":["$\\mathrm{P}_{+}=\\mathrm{P}_{+}\\left(X_{1}, X_{2}, \\ldots, X_{p}\\right)=\\frac{1}{1+e^{-\\left(\\theta_{0}+\\theta_{1} X_{1}+\\theta_{2} X_{2}+\\ldots+\\theta_{p} X_{p}\\right)}}$"],"metadata":{"id":"1fmFBvhxoWRw"}},{"cell_type":"markdown","source":["получили следующие коэффициенты тета"],"metadata":{"id":"3NFB9MCUocOQ"}},{"cell_type":"code","source":["reg.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IlYxX_x9ro5z","executionInfo":{"status":"ok","timestamp":1670074703926,"user_tz":-180,"elapsed":383,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"71f0c42a-4335-4117-b3c7-8d1619451bd9"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.53926262,  4.59140245,  0.25557897,  0.24757885, -0.08948636,\n","         2.49002859,  1.19141778,  0.84282167]])"]},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["и коэффициент тета0"],"metadata":{"id":"IUEGcKq9P-2V"}},{"cell_type":"code","source":["reg.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vkl6ibbSrvDr","executionInfo":{"status":"ok","timestamp":1670082180106,"user_tz":-180,"elapsed":276,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"70f8c5b7-5758-4771-e519-26fc7c58cd42"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-5.95596919])"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["reg.classes_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NX1o5Y30r0J7","executionInfo":{"status":"ok","timestamp":1670074709148,"user_tz":-180,"elapsed":429,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"db9881b3-907b-46f9-a6bc-1388ffceec76"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 1.])"]},"metadata":{},"execution_count":50}]},{"cell_type":"markdown","source":["Предскажем диабет для пациента из таблицы (для строки 24)\n"],"metadata":{"id":"MFanBKPrp9P3"}},{"cell_type":"code","source":["proba = data_f_norm[(data_f_norm.index == 24)]\n","reg.predict(proba.drop(['Outcome'], axis=1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I66KGkl2LWMb","executionInfo":{"status":"ok","timestamp":1670075214552,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"83499252-444e-4cd6-f8a6-740f0a6f5580"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.])"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["получили, что у пациента скорее всего диабет.\n","посмотрим вероятеность заболевания:"],"metadata":{"id":"SN4kH2uvqqtQ"}},{"cell_type":"code","source":["reg.predict_proba(proba.drop(['Outcome'], axis=1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gm-3UjxbPhaZ","executionInfo":{"status":"ok","timestamp":1670075323670,"user_tz":-180,"elapsed":297,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"dc93ea2b-e40a-4062-a235-7e119d2e6791"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.32792324, 0.67207676]])"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["полученная модель с вероятностью 67% относит поциента к класу 1 (диабет)"],"metadata":{"id":"frNLSzH8P79k"}},{"cell_type":"markdown","source":["Оценка модели с помощью тестовых данных"],"metadata":{"id":"TqiU4rKGsAuL"}},{"cell_type":"markdown","source":["отберем предикторы"],"metadata":{"id":"aRNbHrLSsZbb"}},{"cell_type":"code","source":["X_test = pd.DataFrame(test.drop(['Outcome'], axis=1))\n","X_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-KRISNMxsBoL","executionInfo":{"status":"ok","timestamp":1670082565158,"user_tz":-180,"elapsed":293,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"a2b6f385-21ba-44f9-ced6-833b6d6d3c2a"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Pregnancies   Glucose  BloodPressure  SkinThickness   Insulin       BMI  \\\n","0      0.352941  0.747475       0.489796       0.353535  0.000000  0.586387   \n","17     0.411765  0.540404       0.510204       0.000000  0.000000  0.516579   \n","18     0.058824  0.520202       0.061224       0.383838  0.162745  0.755672   \n","20     0.176471  0.636364       0.653061       0.414141  0.460784  0.685864   \n","24     0.647059  0.722222       0.714286       0.333333  0.286275  0.638743   \n","\n","    DiabetesPedigreeFunction       Age  \n","0                   0.597388  0.483333  \n","17                  0.191513  0.166667  \n","18                  0.114255  0.200000  \n","20                  0.681175  0.100000  \n","24                  0.191513  0.500000  "],"text/html":["\n","  <div id=\"df-69c0217f-506d-4072-b9e2-f7aaae6ec2f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.352941</td>\n","      <td>0.747475</td>\n","      <td>0.489796</td>\n","      <td>0.353535</td>\n","      <td>0.000000</td>\n","      <td>0.586387</td>\n","      <td>0.597388</td>\n","      <td>0.483333</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.411765</td>\n","      <td>0.540404</td>\n","      <td>0.510204</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.516579</td>\n","      <td>0.191513</td>\n","      <td>0.166667</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.058824</td>\n","      <td>0.520202</td>\n","      <td>0.061224</td>\n","      <td>0.383838</td>\n","      <td>0.162745</td>\n","      <td>0.755672</td>\n","      <td>0.114255</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0.176471</td>\n","      <td>0.636364</td>\n","      <td>0.653061</td>\n","      <td>0.414141</td>\n","      <td>0.460784</td>\n","      <td>0.685864</td>\n","      <td>0.681175</td>\n","      <td>0.100000</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>0.647059</td>\n","      <td>0.722222</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.286275</td>\n","      <td>0.638743</td>\n","      <td>0.191513</td>\n","      <td>0.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-69c0217f-506d-4072-b9e2-f7aaae6ec2f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-69c0217f-506d-4072-b9e2-f7aaae6ec2f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-69c0217f-506d-4072-b9e2-f7aaae6ec2f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["Предсказание с помощью обученной модели"],"metadata":{"id":"NjnyIuaTskGj"}},{"cell_type":"code","source":["Y_pred = reg.predict(X_test)\n","Y_pred"],"metadata":{"id":"E7ndI1ZmsmAb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670082568360,"user_tz":-180,"elapsed":367,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"87a88ced-7898-4b52-a445-2e657e08ac7e"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 1., 1., 0., 0., 0., 0., 0.,\n","       1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1.,\n","       1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0.,\n","       0., 1., 0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,\n","       1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.,\n","       0., 0., 0., 0., 0., 1., 1., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,\n","       0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0.])"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["Вероятности отнесения к 0 и 1 классу объектов тестовых данных соответствнно"],"metadata":{"id":"F7zeGLWYvDgK"}},{"cell_type":"code","source":["Y_pred_probs = reg.predict_proba(X_test)\n","Y_pred_probs"],"metadata":{"id":"NUCNzX8UvGtB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670082583717,"user_tz":-180,"elapsed":290,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"13b4022b-65aa-4a0b-8b29-f2c48b90b63a"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.3076367 , 0.6923633 ],\n","       [0.74184997, 0.25815003],\n","       [0.76754832, 0.23245168],\n","       [0.48267158, 0.51732842],\n","       [0.30246779, 0.69753221],\n","       [0.5473654 , 0.4526346 ],\n","       [0.6356143 , 0.3643857 ],\n","       [0.51465832, 0.48534168],\n","       [0.47600759, 0.52399241],\n","       [0.66815955, 0.33184045],\n","       [0.44847989, 0.55152011],\n","       [0.17614794, 0.82385206],\n","       [0.94583018, 0.05416982],\n","       [0.50479232, 0.49520768],\n","       [0.59940844, 0.40059156],\n","       [0.64916826, 0.35083174],\n","       [0.629017  , 0.370983  ],\n","       [0.24035862, 0.75964138],\n","       [0.66515109, 0.33484891],\n","       [0.87162826, 0.12837174],\n","       [0.58374982, 0.41625018],\n","       [0.87970201, 0.12029799],\n","       [0.68722986, 0.31277014],\n","       [0.47225818, 0.52774182],\n","       [0.29495131, 0.70504869],\n","       [0.85727721, 0.14272279],\n","       [0.70528576, 0.29471424],\n","       [0.81237939, 0.18762061],\n","       [0.84359953, 0.15640047],\n","       [0.64427507, 0.35572493],\n","       [0.55880681, 0.44119319],\n","       [0.94046118, 0.05953882],\n","       [0.42301976, 0.57698024],\n","       [0.14984739, 0.85015261],\n","       [0.231692  , 0.768308  ],\n","       [0.83081527, 0.16918473],\n","       [0.6519995 , 0.3480005 ],\n","       [0.58939446, 0.41060554],\n","       [0.47463485, 0.52536515],\n","       [0.32635458, 0.67364542],\n","       [0.11234663, 0.88765337],\n","       [0.84542821, 0.15457179],\n","       [0.89516572, 0.10483428],\n","       [0.76578601, 0.23421399],\n","       [0.85401317, 0.14598683],\n","       [0.65010463, 0.34989537],\n","       [0.34452933, 0.65547067],\n","       [0.27259855, 0.72740145],\n","       [0.15572227, 0.84427773],\n","       [0.69768022, 0.30231978],\n","       [0.53699751, 0.46300249],\n","       [0.83754205, 0.16245795],\n","       [0.36175735, 0.63824265],\n","       [0.77204711, 0.22795289],\n","       [0.51373698, 0.48626302],\n","       [0.56909115, 0.43090885],\n","       [0.40805179, 0.59194821],\n","       [0.49402323, 0.50597677],\n","       [0.34822189, 0.65177811],\n","       [0.83873987, 0.16126013],\n","       [0.78551231, 0.21448769],\n","       [0.63672457, 0.36327543],\n","       [0.87959025, 0.12040975],\n","       [0.29801023, 0.70198977],\n","       [0.50061841, 0.49938159],\n","       [0.91124275, 0.08875725],\n","       [0.8028905 , 0.1971095 ],\n","       [0.70152332, 0.29847668],\n","       [0.40193052, 0.59806948],\n","       [0.70286542, 0.29713458],\n","       [0.74098438, 0.25901562],\n","       [0.83860168, 0.16139832],\n","       [0.58327345, 0.41672655],\n","       [0.72401714, 0.27598286],\n","       [0.62458148, 0.37541852],\n","       [0.37951512, 0.62048488],\n","       [0.90404194, 0.09595806],\n","       [0.76236702, 0.23763298],\n","       [0.80989688, 0.19010312],\n","       [0.74618823, 0.25381177],\n","       [0.49407611, 0.50592389],\n","       [0.9357481 , 0.0642519 ],\n","       [0.72869988, 0.27130012],\n","       [0.5295937 , 0.4704063 ],\n","       [0.74038948, 0.25961052],\n","       [0.87126489, 0.12873511],\n","       [0.54049399, 0.45950601],\n","       [0.79070483, 0.20929517],\n","       [0.75484265, 0.24515735],\n","       [0.77458226, 0.22541774],\n","       [0.3709494 , 0.6290506 ],\n","       [0.93852765, 0.06147235],\n","       [0.91692227, 0.08307773],\n","       [0.83511293, 0.16488707],\n","       [0.63186294, 0.36813706],\n","       [0.89084521, 0.10915479],\n","       [0.85192011, 0.14807989],\n","       [0.41137699, 0.58862301],\n","       [0.86989158, 0.13010842],\n","       [0.49796354, 0.50203646],\n","       [0.74384133, 0.25615867],\n","       [0.59637009, 0.40362991],\n","       [0.76374952, 0.23625048],\n","       [0.79316716, 0.20683284],\n","       [0.76844477, 0.23155523],\n","       [0.74773119, 0.25226881],\n","       [0.55748919, 0.44251081],\n","       [0.13135229, 0.86864771],\n","       [0.47952781, 0.52047219],\n","       [0.24293889, 0.75706111],\n","       [0.66710525, 0.33289475],\n","       [0.31685769, 0.68314231],\n","       [0.91344404, 0.08655596],\n","       [0.7297597 , 0.2702403 ],\n","       [0.52056616, 0.47943384],\n","       [0.27188854, 0.72811146],\n","       [0.2500818 , 0.7499182 ],\n","       [0.52573559, 0.47426441],\n","       [0.50274062, 0.49725938],\n","       [0.91451803, 0.08548197],\n","       [0.416455  , 0.583545  ],\n","       [0.81826521, 0.18173479],\n","       [0.34164347, 0.65835653],\n","       [0.56765037, 0.43234963],\n","       [0.58801151, 0.41198849],\n","       [0.84507099, 0.15492901],\n","       [0.69091457, 0.30908543],\n","       [0.81296671, 0.18703329],\n","       [0.76482493, 0.23517507],\n","       [0.39697245, 0.60302755],\n","       [0.26654846, 0.73345154],\n","       [0.80497406, 0.19502594],\n","       [0.80895472, 0.19104528],\n","       [0.1609188 , 0.8390812 ],\n","       [0.85180839, 0.14819161]])"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["Отбор отклика Y из тестовых данных и преобразование в массив\n"],"metadata":{"id":"j-oabPaKvfrx"}},{"cell_type":"code","source":["Y_true = (test['Outcome'].to_frame().T).values.ravel()\n","Y_true"],"metadata":{"id":"4Rq0ehJpvgwx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670082596226,"user_tz":-180,"elapsed":287,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"d9645b10-9d19-49a5-bd4c-31174149f31c"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1.,\n","       1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,\n","       1., 0., 0., 1., 1., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1., 0.,\n","       0., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 0.,\n","       1., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 0., 1., 0., 0., 0., 0.,\n","       0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,\n","       1., 0., 0., 0., 1., 1., 0., 1., 0., 1., 0., 0., 0., 1., 1., 0., 0.,\n","       0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 1., 0., 0., 1., 0.])"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["Отбор вероятностей отнесения объектов к классу 1"],"metadata":{"id":"V1L9ecwMwaFg"}},{"cell_type":"code","source":["Y_pred_probs_class_1 = Y_pred_probs[:, 1]\n","Y_pred_probs_class_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fACYzbJUwaZQ","executionInfo":{"status":"ok","timestamp":1670082642231,"user_tz":-180,"elapsed":366,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"8f73b55e-adfa-4a00-d0a7-5d832f8e87bb"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.6923633 , 0.25815003, 0.23245168, 0.51732842, 0.69753221,\n","       0.4526346 , 0.3643857 , 0.48534168, 0.52399241, 0.33184045,\n","       0.55152011, 0.82385206, 0.05416982, 0.49520768, 0.40059156,\n","       0.35083174, 0.370983  , 0.75964138, 0.33484891, 0.12837174,\n","       0.41625018, 0.12029799, 0.31277014, 0.52774182, 0.70504869,\n","       0.14272279, 0.29471424, 0.18762061, 0.15640047, 0.35572493,\n","       0.44119319, 0.05953882, 0.57698024, 0.85015261, 0.768308  ,\n","       0.16918473, 0.3480005 , 0.41060554, 0.52536515, 0.67364542,\n","       0.88765337, 0.15457179, 0.10483428, 0.23421399, 0.14598683,\n","       0.34989537, 0.65547067, 0.72740145, 0.84427773, 0.30231978,\n","       0.46300249, 0.16245795, 0.63824265, 0.22795289, 0.48626302,\n","       0.43090885, 0.59194821, 0.50597677, 0.65177811, 0.16126013,\n","       0.21448769, 0.36327543, 0.12040975, 0.70198977, 0.49938159,\n","       0.08875725, 0.1971095 , 0.29847668, 0.59806948, 0.29713458,\n","       0.25901562, 0.16139832, 0.41672655, 0.27598286, 0.37541852,\n","       0.62048488, 0.09595806, 0.23763298, 0.19010312, 0.25381177,\n","       0.50592389, 0.0642519 , 0.27130012, 0.4704063 , 0.25961052,\n","       0.12873511, 0.45950601, 0.20929517, 0.24515735, 0.22541774,\n","       0.6290506 , 0.06147235, 0.08307773, 0.16488707, 0.36813706,\n","       0.10915479, 0.14807989, 0.58862301, 0.13010842, 0.50203646,\n","       0.25615867, 0.40362991, 0.23625048, 0.20683284, 0.23155523,\n","       0.25226881, 0.44251081, 0.86864771, 0.52047219, 0.75706111,\n","       0.33289475, 0.68314231, 0.08655596, 0.2702403 , 0.47943384,\n","       0.72811146, 0.7499182 , 0.47426441, 0.49725938, 0.08548197,\n","       0.583545  , 0.18173479, 0.65835653, 0.43234963, 0.41198849,\n","       0.15492901, 0.30908543, 0.18703329, 0.23517507, 0.60302755,\n","       0.73345154, 0.19502594, 0.19104528, 0.8390812 , 0.14819161])"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["Вычисляем AUC\n"],"metadata":{"id":"IqCtugiVwJMJ"}},{"cell_type":"code","source":["metrics.roc_auc_score(Y_true, Y_pred_probs_class_1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k4rrWdX9wJpJ","executionInfo":{"status":"ok","timestamp":1670082649597,"user_tz":-180,"elapsed":818,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"b6f53ac9-8128-4fcc-8013-79b03bcf7669"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8370406189555125"]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","source":["получили хорошую точность модели - 83,7%"],"metadata":{"id":"5u5zB8BFr64H"}},{"cell_type":"markdown","source":["Вычисление Recall\n"],"metadata":{"id":"xANZDT-_w2kR"}},{"cell_type":"code","source":["metrics.recall_score(Y_true, Y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OaWGTJjMw3BJ","executionInfo":{"status":"ok","timestamp":1670082653920,"user_tz":-180,"elapsed":550,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"b5b9f92a-3384-46c7-f14c-46673e6fb4af"},"execution_count":100,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6382978723404256"]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","source":["63,8% - оценка вероятности, что пациент с диабетом будет класссифицирован верно"],"metadata":{"id":"Kft_Xh85sYzX"}},{"cell_type":"markdown","source":["Вычисление Precision\n"],"metadata":{"id":"EeFkV_QlxN8Z"}},{"cell_type":"code","source":["metrics.precision_score(Y_true, Y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8EbjhGsVxOTZ","executionInfo":{"status":"ok","timestamp":1670082657131,"user_tz":-180,"elapsed":268,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"f954dc59-dc0b-48de-c942-d78a6400fdb1"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.75"]},"metadata":{},"execution_count":101}]},{"cell_type":"markdown","source":["75% - оценка вероятности, что модель предсказала диабет и у пациента действительно диабет"],"metadata":{"id":"RlfNpc-muB2X"}},{"cell_type":"markdown","source":["Подключим библиотеки для визуализации\n"],"metadata":{"id":"XtLUv7Lpzhzo"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","%matplotlib inline"],"metadata":{"id":"NbzOUXZ1zjYA","executionInfo":{"status":"ok","timestamp":1670061266090,"user_tz":-180,"elapsed":274,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["metrics.plot_roc_curve(reg, X_test, Y_true, color='darkorange') \n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver operating characteristic example')\n","plt.legend(loc=\"lower right\")\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":678},"id":"OX3oQpNQzxso","executionInfo":{"status":"ok","timestamp":1670083417110,"user_tz":-180,"elapsed":883,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"e7272cf2-ae69-49b4-9d9a-3a0601c21537"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function plot_roc_curve is deprecated; Function :func:`plot_roc_curve` is deprecated in 1.0 and will be removed in 1.2. Use one of the class methods: :meth:`sklearn.metric.RocCurveDisplay.from_predictions` or :meth:`sklearn.metric.RocCurveDisplay.from_estimator`.\n","  warnings.warn(msg, category=FutureWarning)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["*Дерево решений*"],"metadata":{"id":"CJDxBQuT5xOV"}},{"cell_type":"markdown","source":["Подключем классификатор DecisionTreeClassifier:"],"metadata":{"id":"PY6kgL7O6A5Y"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier"],"metadata":{"id":"tinQSGxA6B1m","executionInfo":{"status":"ok","timestamp":1670083506779,"user_tz":-180,"elapsed":353,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":103,"outputs":[]},{"cell_type":"markdown","source":["Для модели будем использовать не нормализованние данные.\n","Разделим данные на тренировочные и тестовые (80% строк — тренировочные, остальные — тестовые)."],"metadata":{"id":"-jLOht-MvFDs"}},{"cell_type":"code","source":["traint = data_f.sample(frac=0.80, random_state=2022)\n","testt = data_f.drop(train.index)"],"metadata":{"id":"bfl5laA7vh-M","executionInfo":{"status":"ok","timestamp":1670084172449,"user_tz":-180,"elapsed":274,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":113,"outputs":[]},{"cell_type":"markdown","source":["Выберем предикторы (убрав столбец 'Outcome') и отклики ('Outcome')\n","\n"],"metadata":{"id":"xpLzbeH_v7lx"}},{"cell_type":"code","source":["x = traint.drop(['Outcome'], axis=1)\n","y = traint['Outcome']"],"metadata":{"id":"MBi9riEc7SgN","executionInfo":{"status":"ok","timestamp":1670084174997,"user_tz":-180,"elapsed":273,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":114,"outputs":[]},{"cell_type":"markdown","source":["Задаем параметры дерева принятия решений и обучаем модель:\n","\n","'entropy'- критерий разделения;\n","5 - минимальное число объектов в листе;\n","6 - максимальное число листьев."],"metadata":{"id":"21U8OQOI6NDF"}},{"cell_type":"code","source":["tree = DecisionTreeClassifier(criterion='entropy', #критерий разделения\n","                              min_samples_leaf=5, #минимальное число объектов в листе\n","                              max_leaf_nodes=6, #максимальное число листьев\n","                              random_state=2022)\n","clf=tree.fit(x, y)"],"metadata":{"id":"DO7eMoe46OE9","executionInfo":{"status":"ok","timestamp":1670084181835,"user_tz":-180,"elapsed":282,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":115,"outputs":[]},{"cell_type":"markdown","source":["Подключаем библиотеку для визуализации дерева. Сохраняем в файл и выводим на экран."],"metadata":{"id":"w3JpTOxI8KIE"}},{"cell_type":"code","source":["from sklearn.tree import export_graphviz\n","import graphviz\n","columns = list(x.columns)\n","export_graphviz(clf, out_file='tree.dot', \n","                feature_names=columns,\n","                class_names=['0', '1'],\n","                rounded = True, proportion = False, \n","                precision = 2, filled = True, label='all')\n","\n","with open('tree.dot') as f:\n","    dot_graph = f.read()\n","\n","graphviz.Source(dot_graph)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":758},"id":"xRkQQYyD6L9t","executionInfo":{"status":"ok","timestamp":1670084184412,"user_tz":-180,"elapsed":522,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"430db736-97ef-4b05-b27c-557ddf667ce4"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<graphviz.files.Source at 0x7fd8a3e3dc40>"],"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.40.1 (20161225.0304)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"598pt\" height=\"552pt\"\n viewBox=\"0.00 0.00 598.00 552.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 548)\">\n<title>Tree</title>\n<polygon fill=\"#ffffff\" stroke=\"transparent\" points=\"-4,4 -4,-548 594,-548 594,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#f1bb94\" stroke=\"#000000\" d=\"M385,-544C385,-544 277,-544 277,-544 271,-544 265,-538 265,-532 265,-532 265,-473 265,-473 265,-467 271,-461 277,-461 277,-461 385,-461 385,-461 391,-461 397,-467 397,-473 397,-473 397,-532 397,-532 397,-538 391,-544 385,-544\"/>\n<text text-anchor=\"middle\" x=\"331\" y=\"-528.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Glucose &lt;= 154.5</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-513.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.9</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-498.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 539</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-483.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [369, 170]</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-468.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#eda876\" stroke=\"#000000\" d=\"M314,-425C314,-425 206,-425 206,-425 200,-425 194,-419 194,-413 194,-413 194,-354 194,-354 194,-348 200,-342 206,-342 206,-342 314,-342 314,-342 320,-342 326,-348 326,-354 326,-354 326,-413 326,-413 326,-419 320,-425 314,-425\"/>\n<text text-anchor=\"middle\" x=\"260\" y=\"-409.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Age &lt;= 28.5</text>\n<text text-anchor=\"middle\" x=\"260\" y=\"-394.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.79</text>\n<text text-anchor=\"middle\" x=\"260\" y=\"-379.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 465</text>\n<text text-anchor=\"middle\" x=\"260\" y=\"-364.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [355, 110]</text>\n<text text-anchor=\"middle\" x=\"260\" y=\"-349.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M306.1676,-460.8796C301.0091,-452.2335 295.5192,-443.0322 290.1924,-434.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"293.0678,-432.0924 284.9383,-425.2981 287.0564,-435.679 293.0678,-432.0924\"/>\n<text text-anchor=\"middle\" x=\"278.8149\" y=\"-445.8366\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">True</text>\n</g>\n<!-- 2 -->\n<g id=\"node11\" class=\"node\">\n<title>2</title>\n<path fill=\"#67b4eb\" stroke=\"#000000\" d=\"M448,-417.5C448,-417.5 356,-417.5 356,-417.5 350,-417.5 344,-411.5 344,-405.5 344,-405.5 344,-361.5 344,-361.5 344,-355.5 350,-349.5 356,-349.5 356,-349.5 448,-349.5 448,-349.5 454,-349.5 460,-355.5 460,-361.5 460,-361.5 460,-405.5 460,-405.5 460,-411.5 454,-417.5 448,-417.5\"/>\n<text text-anchor=\"middle\" x=\"402\" y=\"-402.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.7</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-387.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 74</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-372.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [14, 60]</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-357.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 0&#45;&gt;2 -->\n<g id=\"edge10\" class=\"edge\">\n<title>0&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M355.8324,-460.8796C362.4587,-449.7735 369.6316,-437.7513 376.3033,-426.5691\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"379.4083,-428.1959 381.5264,-417.8149 373.3969,-424.6093 379.4083,-428.1959\"/>\n<text text-anchor=\"middle\" x=\"387.6498\" y=\"-438.3534\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">False</text>\n</g>\n<!-- 3 -->\n<g id=\"node3\" class=\"node\">\n<title>3</title>\n<path fill=\"#e89051\" stroke=\"#000000\" d=\"M239,-306C239,-306 139,-306 139,-306 133,-306 127,-300 127,-294 127,-294 127,-235 127,-235 127,-229 133,-223 139,-223 139,-223 239,-223 239,-223 245,-223 251,-229 251,-235 251,-235 251,-294 251,-294 251,-300 245,-306 239,-306\"/>\n<text text-anchor=\"middle\" x=\"189\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">BMI &lt;= 30.95</text>\n<text text-anchor=\"middle\" x=\"189\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.5</text>\n<text text-anchor=\"middle\" x=\"189\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 247</text>\n<text text-anchor=\"middle\" x=\"189\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [220, 27]</text>\n<text text-anchor=\"middle\" x=\"189\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;3 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M235.1676,-341.8796C230.0091,-333.2335 224.5192,-324.0322 219.1924,-315.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"222.0678,-313.0924 213.9383,-306.2981 216.0564,-316.679 222.0678,-313.0924\"/>\n</g>\n<!-- 4 -->\n<g id=\"node6\" class=\"node\">\n<title>4</title>\n<path fill=\"#f5ceb3\" stroke=\"#000000\" d=\"M381,-306C381,-306 281,-306 281,-306 275,-306 269,-300 269,-294 269,-294 269,-235 269,-235 269,-229 275,-223 281,-223 281,-223 381,-223 381,-223 387,-223 393,-229 393,-235 393,-235 393,-294 393,-294 393,-300 387,-306 381,-306\"/>\n<text text-anchor=\"middle\" x=\"331\" y=\"-290.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">BMI &lt;= 26.35</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-275.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.96</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-260.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 218</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [135, 83]</text>\n<text text-anchor=\"middle\" x=\"331\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 1&#45;&gt;4 -->\n<g id=\"edge5\" class=\"edge\">\n<title>1&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M284.8324,-341.8796C289.9909,-333.2335 295.4808,-324.0322 300.8076,-315.1042\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"303.9436,-316.679 306.0617,-306.2981 297.9322,-313.0924 303.9436,-316.679\"/>\n</g>\n<!-- 7 -->\n<g id=\"node4\" class=\"node\">\n<title>7</title>\n<path fill=\"#e6843e\" stroke=\"#000000\" d=\"M104,-179.5C104,-179.5 12,-179.5 12,-179.5 6,-179.5 0,-173.5 0,-167.5 0,-167.5 0,-123.5 0,-123.5 0,-117.5 6,-111.5 12,-111.5 12,-111.5 104,-111.5 104,-111.5 110,-111.5 116,-117.5 116,-123.5 116,-123.5 116,-167.5 116,-167.5 116,-173.5 110,-179.5 104,-179.5\"/>\n<text text-anchor=\"middle\" x=\"58\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.16</text>\n<text text-anchor=\"middle\" x=\"58\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 127</text>\n<text text-anchor=\"middle\" x=\"58\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [124, 3]</text>\n<text text-anchor=\"middle\" x=\"58\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;7 -->\n<g id=\"edge3\" class=\"edge\">\n<title>3&#45;&gt;7</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M143.1826,-222.8796C130.2303,-211.1138 116.146,-198.3197 103.2286,-186.5855\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"105.5306,-183.9482 95.7753,-179.8149 100.8239,-189.1296 105.5306,-183.9482\"/>\n</g>\n<!-- 8 -->\n<g id=\"node5\" class=\"node\">\n<title>8</title>\n<path fill=\"#eca06a\" stroke=\"#000000\" d=\"M238,-179.5C238,-179.5 146,-179.5 146,-179.5 140,-179.5 134,-173.5 134,-167.5 134,-167.5 134,-123.5 134,-123.5 134,-117.5 140,-111.5 146,-111.5 146,-111.5 238,-111.5 238,-111.5 244,-111.5 250,-117.5 250,-123.5 250,-123.5 250,-167.5 250,-167.5 250,-173.5 244,-179.5 238,-179.5\"/>\n<text text-anchor=\"middle\" x=\"192\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.72</text>\n<text text-anchor=\"middle\" x=\"192\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 120</text>\n<text text-anchor=\"middle\" x=\"192\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [96, 24]</text>\n<text text-anchor=\"middle\" x=\"192\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 3&#45;&gt;8 -->\n<g id=\"edge4\" class=\"edge\">\n<title>3&#45;&gt;8</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M190.0493,-222.8796C190.3182,-212.2134 190.6084,-200.7021 190.8806,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"194.3817,-189.9 191.1349,-179.8149 187.3839,-189.7235 194.3817,-189.9\"/>\n</g>\n<!-- 5 -->\n<g id=\"node7\" class=\"node\">\n<title>5</title>\n<path fill=\"#e78945\" stroke=\"#000000\" d=\"M371,-179.5C371,-179.5 285,-179.5 285,-179.5 279,-179.5 273,-173.5 273,-167.5 273,-167.5 273,-123.5 273,-123.5 273,-117.5 279,-111.5 285,-111.5 285,-111.5 371,-111.5 371,-111.5 377,-111.5 383,-117.5 383,-123.5 383,-123.5 383,-167.5 383,-167.5 383,-173.5 377,-179.5 371,-179.5\"/>\n<text text-anchor=\"middle\" x=\"328\" y=\"-164.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.32</text>\n<text text-anchor=\"middle\" x=\"328\" y=\"-149.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 35</text>\n<text text-anchor=\"middle\" x=\"328\" y=\"-134.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [33, 2]</text>\n<text text-anchor=\"middle\" x=\"328\" y=\"-119.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 4&#45;&gt;5 -->\n<g id=\"edge6\" class=\"edge\">\n<title>4&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M329.9507,-222.8796C329.6818,-212.2134 329.3916,-200.7021 329.1194,-189.9015\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"332.6161,-189.7235 328.8651,-179.8149 325.6183,-189.9 332.6161,-189.7235\"/>\n</g>\n<!-- 6 -->\n<g id=\"node8\" class=\"node\">\n<title>6</title>\n<path fill=\"#fae5d6\" stroke=\"#000000\" d=\"M520.5,-187C520.5,-187 413.5,-187 413.5,-187 407.5,-187 401.5,-181 401.5,-175 401.5,-175 401.5,-116 401.5,-116 401.5,-110 407.5,-104 413.5,-104 413.5,-104 520.5,-104 520.5,-104 526.5,-104 532.5,-110 532.5,-116 532.5,-116 532.5,-175 532.5,-175 532.5,-181 526.5,-187 520.5,-187\"/>\n<text text-anchor=\"middle\" x=\"467\" y=\"-171.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">Glucose &lt;= 101.5</text>\n<text text-anchor=\"middle\" x=\"467\" y=\"-156.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.99</text>\n<text text-anchor=\"middle\" x=\"467\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 183</text>\n<text text-anchor=\"middle\" x=\"467\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [102, 81]</text>\n<text text-anchor=\"middle\" x=\"467\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 4&#45;&gt;6 -->\n<g id=\"edge7\" class=\"edge\">\n<title>4&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M378.5662,-222.8796C389.1679,-213.6031 400.5002,-203.6874 411.3933,-194.1559\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"414.0098,-196.5172 419.2308,-187.2981 409.4002,-191.2491 414.0098,-196.5172\"/>\n</g>\n<!-- 9 -->\n<g id=\"node9\" class=\"node\">\n<title>9</title>\n<path fill=\"#eb9f68\" stroke=\"#000000\" d=\"M443.5,-68C443.5,-68 360.5,-68 360.5,-68 354.5,-68 348.5,-62 348.5,-56 348.5,-56 348.5,-12 348.5,-12 348.5,-6 354.5,0 360.5,0 360.5,0 443.5,0 443.5,0 449.5,0 455.5,-6 455.5,-12 455.5,-12 455.5,-56 455.5,-56 455.5,-62 449.5,-68 443.5,-68\"/>\n<text text-anchor=\"middle\" x=\"402\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 0.7</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 47</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [38, 9]</text>\n<text text-anchor=\"middle\" x=\"402\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 0</text>\n</g>\n<!-- 6&#45;&gt;9 -->\n<g id=\"edge8\" class=\"edge\">\n<title>6&#45;&gt;9</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M442.7964,-103.9815C437.6529,-95.1585 432.2123,-85.8258 427.0384,-76.9506\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"430.0344,-75.1402 421.9743,-68.2637 423.987,-78.6656 430.0344,-75.1402\"/>\n</g>\n<!-- 10 -->\n<g id=\"node10\" class=\"node\">\n<title>10</title>\n<path fill=\"#e9f4fc\" stroke=\"#000000\" d=\"M578,-68C578,-68 486,-68 486,-68 480,-68 474,-62 474,-56 474,-56 474,-12 474,-12 474,-6 480,0 486,0 486,0 578,0 578,0 584,0 590,-6 590,-12 590,-12 590,-56 590,-56 590,-62 584,-68 578,-68\"/>\n<text text-anchor=\"middle\" x=\"532\" y=\"-52.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">entropy = 1.0</text>\n<text text-anchor=\"middle\" x=\"532\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">samples = 136</text>\n<text text-anchor=\"middle\" x=\"532\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">value = [64, 72]</text>\n<text text-anchor=\"middle\" x=\"532\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\" fill=\"#000000\">class = 1</text>\n</g>\n<!-- 6&#45;&gt;10 -->\n<g id=\"edge9\" class=\"edge\">\n<title>6&#45;&gt;10</title>\n<path fill=\"none\" stroke=\"#000000\" d=\"M491.2036,-103.9815C496.3471,-95.1585 501.7877,-85.8258 506.9616,-76.9506\"/>\n<polygon fill=\"#000000\" stroke=\"#000000\" points=\"510.013,-78.6656 512.0257,-68.2637 503.9656,-75.1402 510.013,-78.6656\"/>\n</g>\n</g>\n</svg>\n"},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","source":["Выполним предсказание для конкретного объекта (с индексом 24):"],"metadata":{"id":"YA7FmR5DyGa0"}},{"cell_type":"code","source":["probat = data_f[(data_f.index == 24)]\n","probat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"1EUshRzByIWU","executionInfo":{"status":"ok","timestamp":1670085268193,"user_tz":-180,"elapsed":433,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"735181d7-8f55-4d01-d3f7-92ab8df7bf5a"},"execution_count":135,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n","24           11      143             94             33      146  36.6   \n","\n","    DiabetesPedigreeFunction  Age  Outcome  \n","24                     0.254   51        1  "],"text/html":["\n","  <div id=\"df-2cc83bd8-c377-4ed3-a10a-12cece8bff18\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>24</th>\n","      <td>11</td>\n","      <td>143</td>\n","      <td>94</td>\n","      <td>33</td>\n","      <td>146</td>\n","      <td>36.6</td>\n","      <td>0.254</td>\n","      <td>51</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cc83bd8-c377-4ed3-a10a-12cece8bff18')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2cc83bd8-c377-4ed3-a10a-12cece8bff18 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2cc83bd8-c377-4ed3-a10a-12cece8bff18');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":135}]},{"cell_type":"markdown","source":["Назначенный класс:"],"metadata":{"id":"1-cd_sN-zuxd"}},{"cell_type":"code","source":["clf.predict(probat.drop(['Outcome'], axis=1))[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e0m12jRVzxBQ","executionInfo":{"status":"ok","timestamp":1670085270724,"user_tz":-180,"elapsed":710,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"e734f818-e412-46d7-d2f6-34f7cb81c5fe"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":136}]},{"cell_type":"markdown","source":["Выполняем предсказание для объектов из тестовой выборки:"],"metadata":{"id":"2hiYBymU95dM"}},{"cell_type":"code","source":["x = testt.drop(['Outcome'], axis=1)\n","y_true = testt['Outcome']\n","y_pred = clf.predict(x)"],"metadata":{"id":"mSH2aKe09_xc","executionInfo":{"status":"ok","timestamp":1670084187485,"user_tz":-180,"elapsed":399,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}}},"execution_count":117,"outputs":[]},{"cell_type":"markdown","source":["Доля правильных ответов классификатора:"],"metadata":{"id":"nkOvnCgj9xPU"}},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score\n","accuracy_score(y_true, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YZdyFTb69yak","executionInfo":{"status":"ok","timestamp":1670084193859,"user_tz":-180,"elapsed":288,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"d6173bf3-c933-438a-e11b-84c81c251cd2"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7555555555555555"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["Получили точность модели - 75,6%"],"metadata":{"id":"mvwOTUpR2EYF"}},{"cell_type":"markdown","source":["Среднее значение метрик F1 (Macro-F1):"],"metadata":{"id":"AugLRhH2_RxE"}},{"cell_type":"code","source":["from sklearn.metrics import f1_score\n","f1_score(y_true, y_pred, average='macro')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PkOXzrhu_VNE","executionInfo":{"status":"ok","timestamp":1670084227460,"user_tz":-180,"elapsed":282,"user":{"displayName":"Nina Tulaeva","userId":"03434518176333325479"}},"outputId":"3a4e1537-d94f-4f4b-95e0-6d73b255bb7a"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7428571428571428"]},"metadata":{},"execution_count":120}]},{"cell_type":"markdown","source":["Получили неплохую точность моделей. В случае логистической регрессии она лучше. в целом обе одели справились с классификацией выборочного значения верно. но учитываю, что это - диагностика и более точно, то по всей видимости надо попробовать еще другие виды моделей  или еще порабоатать с первоначальными данными."],"metadata":{"id":"1KAxE0bu1w1R"}}]}